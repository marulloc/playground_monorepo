import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { classNames } from "@/utils/classNames";
// import Header from "@/components/Header";
import Navigation from "@/components/Navigation";
import Avatar from "@/components/Avatar";
import Link from "next/link";
const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="kr">
      <body className={classNames(" relative min-h-screen     ")}>
        {/* <Header /> */}
        <Background />

        <div className=" relative max-w-7xl mx-auto  ">
          <div className=" isolate sticky  top-0 pb-8 lg:-top-8 lg:py-8 w-full z-30   ">
            <Header />
          </div>

          <div className="relative isolate  bg-zinc-800 bg-opacity-40  h-full   backdrop-blur-lg  rounded-lg min-h-[calc(100vh-160px)] ">
            <main className=" px-24  py-24 ">{children}</main>
          </div>
        </div>
      </body>
    </html>
  );
}

const Header = () => {
  return (
    <header className="flex items-center    h-16  z-50  backdrop-blur-xl bg-zinc-800 bg-opacity-40     rounded-lg  px-8    ">
      <div className="flex-1">
        <Link href="/" className=" text-2xl font-semibold">
          marulloc blog
        </Link>
      </div>
      <div className="flex items-center gap-4">
        <Navigation />
        <Avatar />
      </div>
    </header>
  );
};

const Background = ({ children }: { children?: React.ReactNode }) => {
  return (
    <>
      <div className="absolute    inset-x-0 -top-20 -z-10 transform-gpu overflow-hidden blur-3xl  " aria-hidden="true">
        <div
          className="relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-pink-400 to-indigo-400 opacity-30 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]"
          style={{
            clipPath:
              "polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)",
          }}
        />
      </div>
      {children}
      <div
        className="absolute    inset-x-0 -bottom-0 -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]"
        aria-hidden="true"
      >
        <div
          className="  relative left-[calc(50%+3rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]"
          style={{
            clipPath:
              "polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)",
          }}
        />
      </div>
    </>
  );
};
